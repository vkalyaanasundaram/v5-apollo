import Head from 'next/head'
import Image from 'next/image'
import React, { Fragment, useState, useEffect } from 'react';
import styles from '../styles/Home.module.css';
import Header from "../components/Header";
import Card from "../components/Card";
import Hero from "../components/Hero";
import AdvancedHero from "../components/AdvancedHero";
import Footer from "../components/Footer";
import { client } from '../lib/apollo';
import { gql } from "@apollo/client";


export function TypingEffect() {
  const [state] = useState({
    title: "",
    titleTwo: "",
    titleThree: "",
  });

  return (
    <div className={styles.text}>
      <div className="title">{state.title}</div>
      <div className="titleTwo">{state.titleTwo}</div>
      <div className="titleThree">{state.titleThree}</div>
      <Typewriter
        options={{
          autoStart: true,
          loop: true,
          delay: 70,
          strings: [
            "run your business",
            "grow your business",
            "secure your business",
            "renovate",
            "get new equipments",
            "pay my taxes",
            "move to a new locations",
            "purchase inventory",
            "run marketing campaigns",
          ],
        }}
      />
    </div>
  );
}

export default function Home({ page }) {
  const [transparent, setTransparent] = useState(false);
  return (
    // <div className={styles.container}>
    <>
      <Head>
        <title>Kapitus - Apollo GraphQL</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <script src="https://cdn.trustindex.io/loader.js?09a5ee4135268498715860a5eb"></script>
      </Head>
      <Header />
      <main className="mx-5 my-10">
        <>
        <AdvancedHero
          indexTitle="Business Loan Financing to:"
          title=""
          buttonText="GET STARTED"
          buttonURL="https://example.com"
          bgImage="/images/headless_hero_background.webp"
          // bgImage="/images/tablet.webp"

          id={styles.home_hero}
          slug="home"
          column="one"
        >
          <TypingEffect />
        </AdvancedHero>
          {/* {page?.CardRows?.cardMainTitle && */}
          <section className="container reviewContainer">
          {/* {inView && ( */}
            <script src="https://cdn.trustindex.io/loader.js?09a5ee4135268498715860a5eb"></script>
            {/* // <ReviewSlider /> */}
          {/* )} */}
        </section>
          <Card
              cardMainTitle={page?.CardRows?.cardMainTitle}
              cardGroupImg1={
                page?.CardRows?.cardGroup1?.cardIcon?.sourceUrl ?? ""
              }
              cardGroupTitle1={page?.CardRows?.cardGroup1?.cardTitle}
              cardGroupBtn1={page?.CardRows?.cardGroup1?.cardButton?.url ?? ""}
              cardGroupImg2={
                page?.CardRows?.cardGroup2?.cardIcon?.sourceUrl ?? ""
              }
              cardGroupTitle2={page?.CardRows?.cardGroup2?.cardTitle}
              cardGroupBtn2={page?.CardRows?.cardGroup2?.cardButton?.url ?? ""}
              cardGroupImg3={
                page?.CardRows?.cardGroup3?.cardIcon?.sourceUrl ?? ""
              }
              cardGroupTitle3={page?.CardRows?.cardGroup3?.cardTitle}
              cardGroupBtn3={page?.CardRows?.cardGroup3?.cardButton?.url ?? ""}
            />

          {/* } */}
          <div dangerouslySetInnerHTML={{ __html: page.content ?? "" }} />
        </>
      </main>

      <Footer />
    </>
  )
}

export async function getStaticProps() {
  const GET_HOME_PAGE = gql`{
    page(id: "/home", idType: URI) {
      title
      CardRows {
        cardGroup1 {
          cardTitle
          cardDescription
          cardButton {
            url
            title
            target
          }
          cardIcon {
            altText
            sourceUrl
            title
          }
        }
        cardGroup2 {
          cardTitle
          cardDescription
          cardButton {
            url
            title
            target
          }
          cardIcon {
            altText
            sourceUrl
            title
          }
        }
        cardMainTitle
        cardGroup3 {
          cardTitle
          cardDescription
          cardButton {
            url
            title
            target
          }
          cardIcon {
            altText
            sourceUrl
            title
          }
        }
        cardGroup4 {
          cardTitle
          cardDescription
          cardButton {
            url
            title
            target
          }
          cardIcon {
            altText
            sourceUrl
            title
          }
        }
        cardGroup5 {
          cardTitle
          cardDescription
          cardButton {
            url
            title
            target
          }
          cardIcon {
            altText
            sourceUrl
            title
          }
        }
        cardGroup6 {
          cardTitle
          cardDescription
          cardButton {
            url
            title
            target
          }
          cardIcon {
            altText
            sourceUrl
            title
          }
        }
        cardGroup7 {
          cardTitle
          cardDescription
          cardButton {
            url
            title
            target
          }
          cardIcon {
            altText
            sourceUrl
            title
          }
        }
        cardGroup8 {
          cardTitle
          cardDescription
          cardButton {
            url
            title
            target
          }
          cardIcon {
            altText
            sourceUrl
            title
          }
        }
        cardGroup9 {
          cardTitle
          cardDescription
          cardButton {
            url
            title
            target
          }
          cardIcon {
            altText
            sourceUrl
            title
          }
        }
      }
    }
  }`

  const response = await client.query({
    query: GET_HOME_PAGE
  });

  const page = response?.data?.page;

  return {
    props: {
      page,
    }
  }

}